<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beesinergi.mapper.PoOutMapper">

	<resultMap id="BaseResultMap" type="com.beesinergi.model.PoOut">
		<id column="pk_po_out" property="pkPoOut" />
		<result column="fk_po" property="fkPo" />
		<result column="fk_vendor" property="fkVendor" />
		<result column="po_out_no" property="poOutNo" />
		<result column="po_out_date" property="poOutDate" />
		<result column="status" property="status" />
		<result column="created_date" property="createdDate" />
		<result column="created_by" property="createdBy" />
		<result column="changed_date" property="changedDate" />
		<result column="changed_by" property="changedBy" />
		
		<result column="status_name" property="statusName" />
		<result column="po_no" property="poNo" />
		<result column="vendor_name" property="vendorName" />
		
		<collection property="poOutDetailList" ofType="com.beesinergi.model.PoOutDetail">
	    	<result column="fk_product" property="fkProduct" />
	    	<result column="qty" property="qty" />
	    	<result column="price" property="price" />
	    	<result column="total" property="total" />
	    	<result column="req_qty" property="reqQty" />
	    	
	    	<result column="product_name" property="productName" />
	    	<result column="product_stock" property="productStock" />
	    	<result column="fk_category" property="fkCategory" />
	    	<result column="category_name" property="categoryName" />
	  	</collection>
	</resultMap>
	
	<select id="selectAll" parameterType="com.beesinergi.model.PoOut" resultMap="BaseResultMap">
		select 
			a.*,
			b.status_name,
			c.po_no
		from po_out a
			inner join app_status b on b.status_code = a.status and b.status_type = 'PO_OUT'
			inner join po c on c.pk_po = a.fk_po
		where 1 = 1
			<if test="poOutNo != null">
				and lower(a.po_out_no) like #{poOutNo}
			</if>
			<if test="poNo != null">
				and lower(c.po_no) like #{poNo}
			</if>
			<if test="status != null">
				and a.status = #{status}
			</if>
		order by a.po_out_date desc	
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select 
			a.*,
			b.*,
			c.product_name,
			c.fk_category,
			c.qty as product_stock,
			d.lookup_name as category_name,
			e.vendor_name,
			f.po_no
		from po_out a
			inner join po_out_detail b on a.pk_po_out = b.fk_po_out
			inner join product c on c.pk_product = b.fk_product
			inner join lookup d on d.pk_lookup = c.fk_category
			inner join vendor e on e.pk_vendor = a.fk_vendor
			inner join po f on f.pk_po = a.fk_po 
		where a.pk_po_out = #{pkPoOut}
	</select>
	
	<select id="selectCount" parameterType="com.beesinergi.model.PoOut" resultType="java.lang.Integer">
    	select count(*) from po_out a
    	where 1 = 1
    		<if test="poOutNo != null">
				and lower(a.po_out_no) like #{poOutNo}
			</if>
			<if test="poNo != null">
				and lower(c.po_no) like #{poNo}
			</if>
  	</select>
	
	<insert id="insert" parameterType="com.beesinergi.model.PoOut" useGeneratedKeys="true" keyProperty="pkPoOut" keyColumn="pk_po_out">
		insert into po_out ( 
			po_out_no,
			po_out_date,
			fk_po, 
			fk_vendor, 
			status, 
			created_date, 
			created_by
		) values (
			#{poOutNo},
			#{poOutDate},
			#{fkPo},
			#{fkVendor},
			#{status},
			#{createdDate},
			#{createdBy}
      )
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.beesinergi.model.PoOut">
		update po_out
    	<set> 
    		<if test="status != null">
				status = #{status},
			</if>
	      	changed_date = #{changedDate},
	      	changed_by = #{changedBy},
	    </set>  	
		where pk_po_out = #{pkPoOut}
	</update> 
	
</mapper>